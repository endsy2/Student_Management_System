/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Crud;
import com.mysql.cj.x.protobuf.MysqlxCrud.Update;
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.PreparedStatement ;
import java.sql.ResultSet;
import java.sql.Time;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import student_management_system.Class.Connect;
import student_management_system.Course_management;
import student_management_system.Teacher;

/**
 *
 * @author MSI
 */
public final class CourseEdit extends javax.swing.JFrame {

    /**
     * Creates new form Main_navigation
     */
    public CourseEdit() {
        initComponents();
        display();
        jcomboteacher();
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        roomnumbertxt = new javax.swing.JTextField();
        leveltxt = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        starttxt = new javax.swing.JTextField();
        endtxt = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        idtxt = new javax.swing.JTextField();
        subjecttxt = new javax.swing.JComboBox<>();
        teachertxt = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        display = new javax.swing.JTable();
        addbtn = new javax.swing.JButton();
        updatebtn = new javax.swing.JButton();
        deletebtn = new javax.swing.JButton();
        backbtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setSize(new java.awt.Dimension(900, 600));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setPreferredSize(new java.awt.Dimension(1100, 911));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setPreferredSize(new java.awt.Dimension(765, 600));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 30)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(153, 153, 255));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(153, 153, 255));
        jLabel4.setText("Subject:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(153, 153, 255));
        jLabel5.setText("Teacher:");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(153, 153, 255));
        jLabel6.setText("Start:");

        roomnumbertxt.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        roomnumbertxt.setForeground(new java.awt.Color(153, 153, 255));
        roomnumbertxt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        roomnumbertxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomnumbertxtActionPerformed(evt);
            }
        });

        leveltxt.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        leveltxt.setForeground(new java.awt.Color(153, 153, 255));
        leveltxt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        leveltxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leveltxtActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(153, 153, 255));
        jLabel8.setText("Room Number:");

        jButton5.setBackground(new java.awt.Color(153, 153, 255));
        jButton5.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("CLEAR");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        starttxt.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        starttxt.setForeground(new java.awt.Color(153, 153, 255));
        starttxt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        starttxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                starttxtActionPerformed(evt);
            }
        });

        endtxt.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        endtxt.setForeground(new java.awt.Color(153, 153, 255));
        endtxt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        endtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endtxtActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(153, 153, 255));
        jLabel7.setText("End:");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(153, 153, 255));
        jLabel9.setText("level");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(153, 153, 255));
        jLabel10.setText("ID");

        idtxt.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        idtxt.setForeground(new java.awt.Color(153, 153, 255));
        idtxt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        idtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idtxtActionPerformed(evt);
            }
        });

        teachertxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teachertxtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(567, 567, 567))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel7)
                            .addComponent(jLabel9)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel10))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(idtxt, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(roomnumbertxt, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(leveltxt, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(starttxt, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(endtxt, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(subjecttxt, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(teachertxt, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(idtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(roomnumbertxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(teachertxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(subjecttxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(leveltxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(35, 35, 35)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(starttxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(35, 35, 35)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(endtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(46, 46, 46)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 185, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(16, 16, 16))
        );

        display.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        display.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        display.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                displayAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        display.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                displayMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(display);

        addbtn.setBackground(new java.awt.Color(153, 153, 255));
        addbtn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        addbtn.setForeground(new java.awt.Color(255, 255, 255));
        addbtn.setText("ADD");
        addbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addbtnActionPerformed(evt);
            }
        });

        updatebtn.setBackground(new java.awt.Color(153, 153, 255));
        updatebtn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        updatebtn.setForeground(new java.awt.Color(255, 255, 255));
        updatebtn.setText("UPDATE");
        updatebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatebtnActionPerformed(evt);
            }
        });

        deletebtn.setBackground(new java.awt.Color(153, 153, 255));
        deletebtn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        deletebtn.setForeground(new java.awt.Color(255, 255, 255));
        deletebtn.setText("DELETE");
        deletebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletebtnActionPerformed(evt);
            }
        });

        backbtn.setBackground(new java.awt.Color(153, 153, 255));
        backbtn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        backbtn.setForeground(new java.awt.Color(255, 255, 255));
        backbtn.setText("BACK");
        backbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(addbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(150, 150, 150)
                        .addComponent(updatebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(150, 150, 150)
                        .addComponent(deletebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(backbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 946, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(123, 123, 123))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 487, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updatebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deletebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 735, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 1569, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 700, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
 
    private void addbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addbtnActionPerformed
        
        try {
            insert();
            display();
        } catch (ParseException ex) {
            Logger.getLogger(CourseEdit.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        refresh();
      
//        
    }//GEN-LAST:event_addbtnActionPerformed

    private void leveltxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leveltxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_leveltxtActionPerformed

    private void roomnumbertxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomnumbertxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roomnumbertxtActionPerformed

    private void updatebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatebtnActionPerformed
        
        try {
            
            update();
            display();
        } catch (ParseException ex) {
            Logger.getLogger(CourseEdit.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_updatebtnActionPerformed

    private void displayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_displayMouseClicked
    DefaultTableModel tblModel = (DefaultTableModel) display.getModel();
        
        String id=tblModel.getValueAt(display. getSelectedRow(),0).toString();
        String roomnumber =tblModel.getValueAt(display.getSelectedRow(),1).toString();
        String fullname= tblModel.getValueAt(display.getSelectedRow(),2).toString();
        String subject=tblModel.getValueAt(display.getSelectedRow(), 3).toString();
        String level = tblModel.getValueAt(display.getSelectedRow(), 4).toString();
        String start=tblModel.getValueAt(display.getSelectedRow(), 5).toString();
        String end =tblModel.getValueAt(display.getSelectedRow(), 6).toString();
//        
//      
        idtxt.setText(id);
        roomnumbertxt.setText(roomnumber);
        subjecttxt.setSelectedItem(subject);
        teachertxt.setSelectedItem(fullname);
        leveltxt.setText(level);
        starttxt.setText(start);
        endtxt.setText(end);
        
        
    }//GEN-LAST:event_displayMouseClicked

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        refresh();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void starttxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_starttxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_starttxtActionPerformed

    private void endtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endtxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_endtxtActionPerformed

    private void deletebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletebtnActionPerformed
        delete();
        display();
        refresh();
    }//GEN-LAST:event_deletebtnActionPerformed

    private void backbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backbtnActionPerformed
        Course_management course_management_nav=new Course_management();
        course_management_nav.show();
        dispose();
    }//GEN-LAST:event_backbtnActionPerformed

    private void displayAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_displayAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_displayAncestorAdded

    private void idtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idtxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idtxtActionPerformed

    private void teachertxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teachertxtActionPerformed
        setsubject();
    }//GEN-LAST:event_teachertxtActionPerformed
    public void display(){
   
    
    String query="""
                  SELECT * FROM class 
                                 INNER JOIN teacher ON class.teacherID = teacher.teacherid
                                 INNER JOIN subject ON class.subjectid = subject.idsubject
                                 ORDER BY ID""";
    DefaultTableModel tb=new DefaultTableModel();
    tb.setColumnIdentifiers(new Object[]{
            "ID",
            "Room Number",
            "Teacher",  
            "Subject",
            "Level",
            "Start",
            "End"
    });
    display.setModel(tb);
    try(Connection con =Connect.getConnection();
            PreparedStatement prsm=con.prepareStatement(query)){
            
            try(ResultSet rs =prsm.executeQuery()){
                while(rs.next()){
                    tb.addRow(new Object[]{
                    rs.getInt("ID"),
                    rs.getInt("roomnumber"),
                    rs.getString ("fullname"),
                    rs.getString("subject_name"),
                    rs.getInt ("level"),
                    rs.getString("startTime").substring(0,5),
                    rs.getString("endTime").substring(0,5)
                    });
                    
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Teacher.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public void insert () throws ParseException {
        int roomNumber =Integer.parseInt(roomnumbertxt.getText());
        String fullName=teachertxt.getSelectedItem().toString();
        String subject=subjecttxt.getSelectedItem().toString();
        int level =Integer.parseInt(leveltxt.getText());
        
        DateFormat formatter=new SimpleDateFormat("HH:mm");
        
        Time start = new Time(formatter.parse(starttxt.getText()).getTime());
        Time end = new Time(formatter.parse(endtxt.getText()).getTime());
       
        
        
        String insertQuery = """
                                CALL insertCourse(?,?,?,?,?,?);
                             """;
         try (Connection con = Connect.getConnection(); 
         PreparedStatement pstmt = con.prepareStatement(insertQuery))
         {
        // Set parameters for the prepared statement
        pstmt.setInt (1,roomNumber);
        pstmt.setString(2, fullName);
        pstmt.setString(3, subject);
        pstmt.setInt(4,level);
        pstmt.setTime(5, start);
        pstmt.setTime(6,end);
        
        
        // Execute the insert operation
        int rowsAffected = pstmt.executeUpdate();
        
        
    }   catch (SQLException ex) {
            Logger.getLogger(CourseEdit.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    } 

public void update() throws ParseException {
    try {
        // Parse and retrieve values from text fields
        int id = Integer.parseInt(idtxt.getText());
        int roomNumber = Integer.parseInt(roomnumbertxt.getText());
        String fullName = teachertxt.getSelectedItem().toString();
        String subject = subjecttxt.getSelectedItem().toString();
        int level = Integer.parseInt(leveltxt.getText());

        // Format and parse start and end times
        DateFormat formatter = new SimpleDateFormat("HH:mm");
        Time start = new Time(formatter.parse(starttxt.getText()).getTime());
        Time end = new Time(formatter.parse(endtxt.getText()).getTime());

        // SQL query to update the teacher's information
        String updateQuery = "CALL updateCourse(?,?,?,?,?,?,?)";

        // Establish the connection and prepare the statement
        try (Connection con = Connect.getConnection();
             PreparedStatement pstmt = con.prepareStatement(updateQuery)) {

            // Set parameters for the prepared statement
            pstmt.setInt(1, id);
            pstmt.setInt(2, roomNumber);
            pstmt.setString(3, fullName);
            pstmt.setString(4, subject);
            pstmt.setInt(5, level);
            pstmt.setTime(6, start);
            pstmt.setTime(7, end);
            System.out.println("hello");
            // Execute the update operation
            int rowsAffected = pstmt.executeUpdate();

            // Optionally, you can check the number of affected rows
            if (rowsAffected > 0) {
                System.out.println("Update successful!");
            } else {
                System.out.println("Update failed! No rows affected.");
            }

            // Refresh or display updated data
            display();
            refresh();

        } catch (SQLException ex) {
            Logger.getLogger(Update.class.getName()).log(Level.SEVERE, "SQL error during update", ex);
        }
    } catch (NumberFormatException ex) {
        Logger.getLogger(Update.class.getName()).log(Level.SEVERE, "Error parsing number", ex);
    } catch (ParseException ex) {
        Logger.getLogger(Update.class.getName()).log(Level.SEVERE, "Error parsing date/time", ex);
        throw ex; // Re-throw the exception if needed for further handling
    }
}

public void delete(){
        int delete=Integer.parseInt(idtxt.getText());
        String deleteQuery="""
                          CALL deleteCourse(?);""";
        try (Connection con = Connect.getConnection(); 
         PreparedStatement pstmt = con.prepareStatement(deleteQuery))
         {
             pstmt.setInt(1,delete);
        System.out.println(delete);
        int rowsAffected = pstmt.executeUpdate();
    }   catch (SQLException ex) {
           
        }
        
    }
void jcomboteacher() {
    // SQL query to retrieve all teachers
    String teacher = "SELECT * FROM teacher;";
    
    try (Connection con = Connect.getConnection();
         PreparedStatement pstmt = con.prepareStatement(teacher)) {
         
        try (ResultSet rs = pstmt.executeQuery()) {
            // Clear the JComboBox before adding new items
            teachertxt.removeAllItems();
            
            // Iterate through the result set and add each teacher's name to the JComboBox
            while (rs.next()) {
                String name = rs.getString("fullname");
                teachertxt.addItem(name);
            }
        }
        
    } catch (SQLException ex) {
        Logger.getLogger(CourseEdit.class.getName()).log(Level.SEVERE, "Error populating teacher JComboBox", ex);
    }
}


void setsubject() {
    // Get the selected teacher's name from the JComboBox
    String teacher = teachertxt.getSelectedItem().toString();
    
    // SQL query to get subjects for the selected teacher
    String setsubject = """
        SELECT 
            t.fullname,
            s1.subject_name AS subject1,
            s2.subject_name AS subject2 
        FROM teacher t
        LEFT JOIN subject s1 ON t.subjectid1 = s1.idsubject
        LEFT JOIN subject s2 ON t.subjectid2 = s2.idsubject
        WHERE t.fullname = ?
        LIMIT 1;
    """;

    try (Connection con = Connect.getConnection();
         PreparedStatement ptmt = con.prepareStatement(setsubject)) {
         
        // Set the parameter for the PreparedStatement
        ptmt.setString(1, teacher);
        
        try (ResultSet rs = ptmt.executeQuery()) {
            // Clear the JComboBox before adding new items
            subjecttxt.removeAllItems();
            
            if (rs.next()) {
                // Retrieve subjects from the ResultSet
                String subject1 = rs.getString("subject1");
                String subject2 = rs.getString("subject2");
                
                // Add subjects to the JComboBox
                if (subject1 != null) {
                    subjecttxt.addItem(subject1);
                }
                if (subject2 != null) {
                    subjecttxt.addItem(subject2);
                }
                
                // Optionally handle the case where no subjects are available
                if (subjecttxt.getItemCount() == 0) {
                    subjecttxt.addItem("No subjects available");
                }
            } else {
                // If no rows are found, optionally add a placeholder
                subjecttxt.addItem("No subjects found for selected teacher");
            }
        }
        
    } catch (SQLException ex) {
        Logger.getLogger(CourseEdit.class.getName()).log(Level.SEVERE, "Error setting subjects", ex);
    }
}

      
public void refresh(){
        idtxt.setText("");
        roomnumbertxt.setText("");
        teachertxt.setSelectedItem("");
        subjecttxt.setSelectedItem("");
        starttxt.setText("");
        endtxt.setText("");
        leveltxt.setText("");
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CourseEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //<leveltxtfold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //<leveltxtfold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new CourseEdit().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addbtn;
    private javax.swing.JButton backbtn;
    private javax.swing.JButton deletebtn;
    private javax.swing.JTable display;
    private javax.swing.JTextField endtxt;
    private javax.swing.JTextField idtxt;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField leveltxt;
    private javax.swing.JTextField roomnumbertxt;
    private javax.swing.JTextField starttxt;
    private javax.swing.JComboBox<String> subjecttxt;
    private javax.swing.JComboBox<String> teachertxt;
    private javax.swing.JButton updatebtn;
    // End of variables declaration//GEN-END:variables
}
